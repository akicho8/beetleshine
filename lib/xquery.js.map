{"version":3,"file":"xquery.js","names":["_xstring","require","_xhash","_lodash","_interopRequireDefault","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","Xquery","query_compact","str","hash","query_hash_from_str","compacted_hash","Xhash","hash_compact","query_hash_to_str","query_str_merge","params","_","each","v","k","queries","Xstring","str_split","pair_values","map","e","reduce","a","_ref","_ref2","join","exports"],"sources":["../src/xquery.js"],"sourcesContent":["import { Xstring } from \"./xstring.js\"\nimport { Xhash } from \"./xhash.js\"\nimport _ from \"lodash\"\n\nexport const Xquery = {\n  // expect(Xquery.query_compact(\"a:b c\").toEqual(\"a:b\"))\n  query_compact(str) {\n    const hash = this.query_hash_from_str(str)\n    const compacted_hash = Xhash.hash_compact(hash)\n    return this.query_hash_to_str(compacted_hash)\n  },\n\n  // expect(Xquery.query_str_merge(\"a:b c:d\", {c:\"x\"})).toEqual(\"a:b c:x\")\n  query_str_merge(str, params) {\n    const hash = this.query_hash_from_str(str)\n    _.each(params, (v, k) => hash[k] = v)\n    return this.query_hash_to_str(hash)\n  },\n\n  // expect(Xquery.query_hash_from_str(\"a:b c:d\")).toEqual({a:\"b\", c:\"d\"})\n  query_hash_from_str(str) {\n    const queries = Xstring.str_split(str || \"\")\n    // const all = queries.filter(e => e.match(/.+:.+/))\n    const pair_values = queries.map(e => Xstring.str_split(e, /:/))\n    const hash = pair_values.reduce((a, [k, v]) => ({...a, [k]: v}), {})\n    return hash\n  },\n\n  // expect(Xquery.query_hash_to_str({a:\"b\", c:\"d\"})).toEqual(\"a:b c:d\")\n  query_hash_to_str(hash) {\n    return _.map(hash, (v, k) => [k, v].join(\":\")).join(\" \")\n  },\n}\n"],"mappings":"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"}