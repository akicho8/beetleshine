{"version":3,"file":"xstring.js","names":["_xassertion","require","_xobject","_lodash","_interopRequireDefault","obj","__esModule","default","MD5","KANJI_NUMBER_TO_HANKAKU_DIGIT_TABLE","Xstring","str_constantize","str","window","Xassertion","__assert__","str_to_boolean","toString","trim","toLowerCase","includes","str_space_remove","replace","str_squish","str_strip","str_strip_tags","DOMParser","dom_parser","parseFromString","body","textContent","str_to_words","str_split","str_to_tags","_","uniq","tags_str_toggle","keywords_str","av","pull","push","join","regexp","arguments","length","undefined","Xobject","blank_p","split","str_truncate","options","truncate","omission","str_to_hash_number","sumBy","e","codePointAt","hira_to_kata","ch","String","fromCharCode","charCodeAt","kana_to_hira","hankaku_format","s","kanji_hankaku_number_format","str_normalize_for_ac","hankaku","str_to_md5","update","digest","str_simple_format","exports"],"sources":["../src/xstring.js"],"sourcesContent":["import { Xassertion } from \"./xassertion.js\"\nimport { Xobject } from \"./xobject.js\"\nimport _ from \"lodash\"\nconst MD5 = require(\"md5.js\")\n\nconst KANJI_NUMBER_TO_HANKAKU_DIGIT_TABLE = {\n  \"〇\": \"0\",\n  \"一\": \"1\",\n  \"二\": \"2\",\n  \"三\": \"3\",\n  \"四\": \"4\",\n  \"五\": \"5\",\n  \"六\": \"6\",\n  \"七\": \"7\",\n  \"八\": \"8\",\n  \"九\": \"9\",\n}\n\nexport const Xstring = {\n  // 文字列をクラス化\n  // ・window に結び付いてないと取得できない\n  // ・return Function(`return ${str}`)() は window[str]() とするのとかわらない\n  // ・自作の Foo クラスを window.Foo = Foo としてもビルドすると Foo は別名の1文字になっていたりするのでこれでは引けない\n  str_constantize(str) {\n    if (typeof window === \"undefined\") {\n      return\n    }\n    Xassertion.__assert__(typeof window !== 'undefined', \"typeof window !== 'undefined'\")\n    Xassertion.__assert__(window[str], \"window[str]\")\n    return window[str]\n  },\n\n  str_to_boolean(str) {\n    str = (str ?? \"\").toString()\n    str = str.trim().toLowerCase()\n    return [\"1\", \"t\", \"true\", \"on\", \"enabled\", \"enable\"].includes(str)\n  },\n\n  // 全角を含めてスペースを除去する\n  // Chrome と Firefox は \\s が全角スペースにマッチする\n  str_space_remove(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/[\\s\\u3000]+/g, \"\")\n    return str\n  },\n\n  // 全角を含めて連続するスペースを1つにする\n  str_squish(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/[\\s\\u3000]+/g, \" \")\n    str = str.trim()\n    return str\n  },\n\n  // 全角を含めて前後のスペースを除去する\n  str_strip(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/^[\\s\\u3000]+/, \"\")\n    str = str.replace(/[\\s\\u3000]+$/, \"\")\n    return str\n  },\n\n  str_strip_tags(str) {\n    if (typeof DOMParser === \"undefined\") {\n      return\n    }\n    const dom_parser = new DOMParser()\n    return dom_parser.parseFromString(str, \"text/html\").body.textContent\n  },\n\n  // str_to_words(\"a,b,a\") // => [\"a\", \"b\", \"a\"]\n  str_to_words(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/,/g, \" \")\n    str = this.str_squish(str)\n    return this.str_split(str, /\\s+/)\n  },\n\n  // str_to_tags(\"a,b,a\") // => [\"a\", \"b\"]\n  str_to_tags(str) {\n    return _.uniq(this.str_to_words(str))\n  },\n\n  // tags_str_toggle(\"a b\", \"c\")   //=> \"a b c\"\n  // tags_str_toggle(\"a b c\", \"c\") //=> \"a b\"\n  tags_str_toggle(keywords_str, str) {\n    let av = this.str_to_tags(keywords_str)\n    if (av.includes(str)) {\n      _.pull(av, str)\n    } else {\n      av.push(str)\n    }\n    return av.join(\" \")\n  },\n\n  // str_split(\"\", //) // => []\n  // JavaScript の split は \"\".split(//) で [\"\"] になる罠があるため使ってはいけない\n  str_split(str, regexp = /\\s+/) {\n    str = (str ?? \"\").toString()\n    if (Xobject.blank_p(str)) {\n      return []\n    }\n    return str.split(regexp)\n  },\n\n  // str_truncate(\"hello\", {length: 20})\n  str_truncate(str, options = {}) {\n    return _.truncate(str, {omission: \"...\", length: 80, ...options})\n  },\n\n  // 文字列の文字のコードの合計\n  str_to_hash_number(str) {\n    return _.sumBy([...str], e => e.codePointAt(0))\n  },\n\n  hira_to_kata(str) {\n    return str.replace(/[\\u3041-\\u3096]/g, ch => String.fromCharCode(ch.charCodeAt(0) + 0x60))\n  },\n\n  kana_to_hira(str) {\n    return str.replace(/[\\u30A1-\\u30FA]/g, ch => String.fromCharCode(ch.charCodeAt(0) - 0x60))\n  },\n\n  hankaku_format(str) {\n    return str.replace(/[Ａ-Ｚａ-ｚ０-９]/g, s => String.fromCharCode(s.charCodeAt(0) - 0xFEE0))\n  },\n\n  // kanji_hankaku_number_format(\"(三二)\") => \"(32)\"\n  kanji_hankaku_number_format(str) {\n    return str.replace(/[〇一二三四五六七八九]/g, s => KANJI_NUMBER_TO_HANKAKU_DIGIT_TABLE[s])\n  },\n\n  // Gs.str_normalize_for_ac(\"Ａ四\") => \"a4\"\n  str_normalize_for_ac(str) {\n    const hankaku = this.hankaku_format(str ?? \"\")\n    return this.kanji_hankaku_number_format(hankaku).toLowerCase()\n  },\n\n  str_to_md5(str) {\n    return new MD5().update(str).digest(\"hex\")\n  },\n\n  str_simple_format(str) {\n    return str.replace(/\\n/g, \"<br/>\")\n  },\n}\n"],"mappings":"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"}