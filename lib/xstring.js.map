{"version":3,"file":"xstring.js","names":["_xassertion","require","_xobject","_lodash","_interopRequireDefault","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","MD5","KANJI_NUMBER_TO_HANKAKU_DIGIT_TABLE","Xstring","str_constantize","str","window","Xassertion","__assert__","str_to_boolean","_str","trim","toLowerCase","includes","str_space_remove","_str2","replace","str_squish","_str3","str_strip","_str4","str_strip_tags","DOMParser","dom_parser","parseFromString","body","textContent","str_to_words","_str5","str_split","str_to_tags","_","uniq","tags_str_toggle","keywords_str","av","pull","join","_str6","regexp","Xobject","blank_p","split","str_truncate","options","truncate","omission","str_to_hash_number","sumBy","e","codePointAt","hira_to_kata","ch","fromCharCode","charCodeAt","kana_to_hira","hankaku_format","s","kanji_hankaku_number_format","str_normalize_for_ac","hankaku","str_to_md5","update","digest","str_simple_format","exports"],"sources":["../src/xstring.js"],"sourcesContent":["import { Xassertion } from \"./xassertion.js\"\nimport { Xobject } from \"./xobject.js\"\nimport _ from \"lodash\"\nconst MD5 = require(\"md5.js\")\n\nconst KANJI_NUMBER_TO_HANKAKU_DIGIT_TABLE = {\n  \"〇\": \"0\",\n  \"一\": \"1\",\n  \"二\": \"2\",\n  \"三\": \"3\",\n  \"四\": \"4\",\n  \"五\": \"5\",\n  \"六\": \"6\",\n  \"七\": \"7\",\n  \"八\": \"8\",\n  \"九\": \"9\",\n}\n\nexport const Xstring = {\n  // 文字列をクラス化\n  // ・window に結び付いてないと取得できない\n  // ・return Function(`return ${str}`)() は window[str]() とするのとかわらない\n  // ・自作の Foo クラスを window.Foo = Foo としてもビルドすると Foo は別名の1文字になっていたりするのでこれでは引けない\n  str_constantize(str) {\n    if (typeof window === \"undefined\") {\n      return\n    }\n    Xassertion.__assert__(typeof window !== 'undefined', \"typeof window !== 'undefined'\")\n    Xassertion.__assert__(window[str], \"window[str]\")\n    return window[str]\n  },\n\n  str_to_boolean(str) {\n    str = (str ?? \"\").toString()\n    str = str.trim().toLowerCase()\n    return [\"1\", \"t\", \"true\", \"on\", \"enabled\", \"enable\"].includes(str)\n  },\n\n  // 全角を含めてスペースを除去する\n  // Chrome と Firefox は \\s が全角スペースにマッチする\n  str_space_remove(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/[\\s\\u3000]+/g, \"\")\n    return str\n  },\n\n  // 全角を含めて連続するスペースを1つにする\n  str_squish(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/[\\s\\u3000]+/g, \" \")\n    str = str.trim()\n    return str\n  },\n\n  // 全角を含めて前後のスペースを除去する\n  str_strip(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/^[\\s\\u3000]+/, \"\")\n    str = str.replace(/[\\s\\u3000]+$/, \"\")\n    return str\n  },\n\n  str_strip_tags(str) {\n    if (typeof DOMParser === \"undefined\") {\n      return\n    }\n    const dom_parser = new DOMParser()\n    return dom_parser.parseFromString(str, \"text/html\").body.textContent\n  },\n\n  // str_to_words(\"a,b,a\") // => [\"a\", \"b\", \"a\"]\n  str_to_words(str) {\n    str = (str ?? \"\").toString()\n    str = str.replace(/,/g, \" \")\n    str = this.str_squish(str)\n    return this.str_split(str, /\\s+/)\n  },\n\n  // str_to_tags(\"a,b,a\") // => [\"a\", \"b\"]\n  str_to_tags(str) {\n    return _.uniq(this.str_to_words(str))\n  },\n\n  // tags_str_toggle(\"a b\", \"c\")   //=> \"a b c\"\n  // tags_str_toggle(\"a b c\", \"c\") //=> \"a b\"\n  tags_str_toggle(keywords_str, str) {\n    let av = this.str_to_tags(keywords_str)\n    if (av.includes(str)) {\n      _.pull(av, str)\n    } else {\n      av.push(str)\n    }\n    return av.join(\" \")\n  },\n\n  // str_split(\"\", //) // => []\n  // JavaScript の split は \"\".split(//) で [\"\"] になる罠があるため使ってはいけない\n  str_split(str, regexp = /\\s+/) {\n    str = (str ?? \"\").toString()\n    if (Xobject.blank_p(str)) {\n      return []\n    }\n    return str.split(regexp)\n  },\n\n  // str_truncate(\"hello\", {length: 20})\n  str_truncate(str, options = {}) {\n    return _.truncate(str, {omission: \"...\", length: 80, ...options})\n  },\n\n  // 文字列の文字のコードの合計\n  str_to_hash_number(str) {\n    return _.sumBy([...str], e => e.codePointAt(0))\n  },\n\n  hira_to_kata(str) {\n    return str.replace(/[\\u3041-\\u3096]/g, ch => String.fromCharCode(ch.charCodeAt(0) + 0x60))\n  },\n\n  kana_to_hira(str) {\n    return str.replace(/[\\u30A1-\\u30FA]/g, ch => String.fromCharCode(ch.charCodeAt(0) - 0x60))\n  },\n\n  hankaku_format(str) {\n    return str.replace(/[Ａ-Ｚａ-ｚ０-９]/g, s => String.fromCharCode(s.charCodeAt(0) - 0xFEE0))\n  },\n\n  // kanji_hankaku_number_format(\"(三二)\") => \"(32)\"\n  kanji_hankaku_number_format(str) {\n    return str.replace(/[〇一二三四五六七八九]/g, s => KANJI_NUMBER_TO_HANKAKU_DIGIT_TABLE[s])\n  },\n\n  // Gs.str_normalize_for_ac(\"Ａ四\") => \"a4\"\n  str_normalize_for_ac(str) {\n    const hankaku = this.hankaku_format(str ?? \"\")\n    return this.kanji_hankaku_number_format(hankaku).toLowerCase()\n  },\n\n  str_to_md5(str) {\n    return new MD5().update(str).digest(\"hex\")\n  },\n\n  str_simple_format(str) {\n    return str.replace(/\\n/g, \"<br/>\")\n  },\n}\n"],"mappings":"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"}