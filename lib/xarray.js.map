{"version":3,"file":"xarray.js","names":["_xobject","require","_xinteger","_xassertion","_lodash","_interopRequireDefault","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","Xarray","ary_first","ary","arguments","undefined","Xassertion","assert_kind_of_array","ary_last","ary_take","index","_","take","ary_drop","drop","ary_sort_by","block","wrap","map","e","source","value","sorted","sortBy","ary_find_all","filter","ary_find_index","findIndex","ary_each_slice_to_a","step","Error","new_ary","push","ary_reverse","reverse","ary_shuffle","shuffle","ary_sample","sample","ary_wrap","ary_cycle_at","Xinteger","imodulo","ary_move","to","v","tail","splice","apply","ary_rotate","shift","unshift","pop","ary_compact","reduce","a","val","ary_compact_blank","Xobject","present_p","exports"],"sources":["../src/xarray.js"],"sourcesContent":["import { Xobject } from \"./xobject.js\"\nimport { Xinteger } from \"./xinteger.js\"\nimport { Xassertion } from \"./xassertion.js\"\nimport _ from \"lodash\"\n\nexport const Xarray = {\n  ary_first(ary, n = null) {\n    Xassertion.assert_kind_of_array(ary)\n    if (n == null) {\n      return ary[0]\n    } else {\n      return ary.slice(0, n)\n    }\n  },\n\n  ary_last(ary, n = null) {\n    Xassertion.assert_kind_of_array(ary)\n    if (n == null) {\n      return ary[ary.length - 1]\n    } else {\n      return ary.slice(-n)\n    }\n  },\n\n  ary_take(ary, index) {\n    Xassertion.assert_kind_of_array(ary)\n    return _.take(ary, index)\n  },\n\n  ary_drop(ary, index) {\n    Xassertion.assert_kind_of_array(ary)\n    return _.drop(ary, index)\n  },\n\n  ary_sort_by(ary, block) {\n    Xassertion.assert_kind_of_array(ary)\n    const wrap = ary.map(e => ({ source: e, value: block(e) }))\n    const sorted = _.sortBy(wrap, \"value\")\n    return sorted.map(e => e.source)\n  },\n\n  ary_find_all(ary, block) {\n    Xassertion.assert_kind_of_array(ary)\n    return ary.filter(e => block(e))\n  },\n\n  ary_find_index(ary, block) {\n    Xassertion.assert_kind_of_array(ary)\n    const index = ary.findIndex((e, i) => block(e))\n    if (index >= 0) {\n      return index\n    }\n  },\n\n  // expect(Gs.ary_each_slice_to_a([\"a\", \"b\", \"c\", \"d\"], 2)).toEqual([[\"a\", \"b\"], [\"c\", \"d\"]])\n  // expect(Gs.ary_each_slice_to_a([\"a\", \"b\", \"c\"], 2)).toEqual([[\"a\", \"b\"], [\"c\"]])\n  // expect(() => Gs.ary_each_slice_to_a([\"a\", \"b\"], 0)).toThrow()\n  // expect(Gs.ary_each_slice_to_a([], 2)).toEqual([])\n  ary_each_slice_to_a(ary, step) {\n    Xassertion.assert_kind_of_array(ary)\n    if (step <= 0) {\n      throw new Error(\"invalid slice size\")\n    }\n    const new_ary = []\n    for (let i = 0; i < ary.length; i += step) {\n      new_ary.push(ary.slice(i, i + step))\n    }\n    return new_ary\n  },\n\n  // 元を破壊させない\n  ary_reverse(ary) {\n    Xassertion.assert_kind_of_array(ary)\n    return [...ary].reverse()\n  },\n\n  // 元は破壊しない\n  ary_shuffle(ary) {\n    Xassertion.assert_kind_of_array(ary)\n    return _.shuffle(ary)\n  },\n\n  ary_sample(ary) {\n    Xassertion.assert_kind_of_array(ary)\n    return _.sample(ary)\n  },\n\n  // 必ず配列にする\n  ary_wrap(ary) {\n    if (!_.isArray(ary)) {\n      ary = [ary]\n    }\n    return ary\n  },\n\n  // はみ出ない\n  ary_cycle_at(ary, index) {\n    Xassertion.assert_kind_of_array(ary)\n    return ary[Xinteger.imodulo(index, ary.length)]\n  },\n\n  // ary 内のインデックス from の要素を to に移動\n  // https://qiita.com/nowayoutbut/items/991515b32805e21f8892\n  ary_move(ary, from, to) {\n    Xassertion.assert_kind_of_array(ary)\n    const n = ary.length\n    ary = [...ary]\n    to = Xinteger.imodulo(to, n)\n    if (from === to || from > n - 1 || to > n - 1) {\n      return ary\n    }\n    const v = ary[from]\n    const tail = ary.slice(from + 1)\n    ary.splice(from)\n    Array.prototype.push.apply(ary, tail)\n    ary.splice(to, 0, v)\n    return ary\n  },\n\n  ary_rotate(ary, n = 1) {\n    Xassertion.assert_kind_of_array(ary)\n    ary = [...ary]\n    if (ary.length > 0) {\n      if (n > 0) {\n        for (let i = 0; i < n; i += 1) {\n          ary.push(ary.shift())\n        }\n      } else {\n        for (let i = 0; i < -n; i += 1) {\n          ary.unshift(ary.pop())\n        }\n      }\n    }\n    return ary\n  },\n\n  // {1, null, undefined, \"\"} => [1, \"\"]\n  ary_compact(ary) {\n    Xassertion.assert_kind_of_array(ary)\n    return _.reduce(ary, (a, val) => {\n      if (val == null) {\n      } else {\n        a.push(val)\n      }\n      return a\n    }, [])\n  },\n\n  // {1, null, undefined, \"\"} => [1]\n  ary_compact_blank(ary) {\n    Xassertion.assert_kind_of_array(ary)\n    return _.reduce(ary, (a, val) => {\n      if (Xobject.present_p(val)) {\n        a.push(val)\n      }\n      return a\n    }, [])\n  },\n}\n"],"mappings":"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"}